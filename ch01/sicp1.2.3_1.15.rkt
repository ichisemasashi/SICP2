;
;   練習問題 1.15
;

(define (cube x) (* x x x))
(define (p x) (- (* 3 x) (* 4 (cube x))))

(define (sine angle)
  (if (not (> (abs angle) 0.1))
      angle
      (p (sine (/ angle 3.0)))))

;;;;;
;; > (require trace)
;; > (sine 12.15)
;; 0.049999999999999996
;; > 
;; > 
;; > (sine 12.15)
;;  '(#<syntax:::1177 sine> 12.15)
;;   '(#<syntax:::1177 sine> 4.05)
;;    '(#<syntax:::1177 sine> 1.3499999999999999)
;;     '(#<syntax:::1177 sine> 0.44999999999999996)
;;      '(#<syntax:::1177 sine> 0.15)
;;       '(#<syntax:::1177 sine> 0.049999999999999996)
;;      '(#<syntax:::1135 p> 0.049999999999999996)
;;     '(#<syntax:::1135 p> 0.1495)
;;    '(#<syntax:::1135 p> 0.4351345505)
;;   '(#<syntax:::1135 p> 0.9758465331678772)
;;  '(#<syntax:::1135 p> -0.7895631144708228)
;; -0.39980345741334
;; >

;; pは5回呼び出される。

;; b. (sine a) が評価される際に sine 手続きによって生成される プロセスが使用する空間とステップ数の増加オーダーを (a の関数として) 求めよ。
; aをn回pに作用させる(1/3にする)と、a=angleになる(<= a 0.1)として、nを求める。
; a・(1/3)^n <= 0.1
; 0.1 < a(1/3)^(n-1)
; なので、a(1/3)^n <= 0.1 < a(1/3)^(n-1)
; 各辺log3をとり
; log3(a) - log3(3)^n <= log3(0.1) < log3(a) -log3(3)^(n-1)
; log3(a) - n <= log3(0.1) < log3(a) - n + 1
; log3(a) <= log3(0.1) + n < log3(a) + 1
; log3(a)-log3(0.1) <= n < log3(a) + 1 - log3(0.1)
; ステップ数nの増加オーダーは、θ(log3(a))となる。
