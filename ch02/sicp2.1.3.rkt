; SICP 2.1.3 データとは何か
; データ (data) とは正確には何を意味しているのでしょうか。
;一般的に、データというものは、何らかのセレクタとコンストラクタの集合に加え、
;それらが有効な表現となるために満たさなければならないと規定された条件によって定義される
;ものと考えることができます。

; ペアという概念について考えてみましょう。
;ペアとは何かということについてはこれまで触れず、言語がペアを操作する手続きとして
;cons, car, cdr を用意してくれているということだけを述べてきました。
;しかし、これら三つの操作について知らなければいけないことは、二つのオブジェクトを cons によってくっつけたら、
;それらのオブジェクトを car と cdr によって取得できるということだけです。
;つまり、それらの操作は、任意のオブジェクト x と y に対して、もし z が (cons x y) であるなら (car z) は x であり、
;(cdr z) は y であるという条件を満たすということです。

;上の条件を満たすものであれば、どんな三つの手続きであってもペアを実装する基礎として使うことができます。
(define (cons x y)
  (define (dispatch m)
    (cond ((= m 0) x)
           ((= m 1) y)
           (else (error "Argument not 0 or 1: CONS" m))))
  dispatch)
(define (car z) (z 0))
(define (cdr z) (z 1))
;手続きによる表現はわかりにくいですが、ペアが満たす必要のある条件を満たしているため、
;ペアを表現する完全に適切な方法と言えます。
;ここでの例は、手続きをオブジェクトとして操作する能力は、
;自動的に複合データを表現する能力を提供するということも示しています。

;手続きによるデータの表現というものは、私たちのプログラミングの
;レパートリーの中で中心的な役割を果たしています。
;メッセージパッシング (message passing)