; ; SICP 2.2.4 add3 例: 図形言語/ペインタ
;ペインタは、枠を引数として取り、ある特定の画像をずらしたり拡大縮小したりして枠にフィットするように描画する手続きとして表現できます。
;つまり、p がペインタで f がフレームであれば、f を引数として p を呼び出すことで、f の中に p の画像を生成します。
;基本ペインタがどのように実装されるかという具体的なところは、グラフィックシステムの特性と描画する画像のタイプに依存します。
;例えば、二つの指定された点の間にスクリーン上の線を引く draw-line という手続きを持っているとします。すると、
; wave ペインタのような線画のペインタは、次のような線分のリストから作ることができます。
(define (segments->painter segment-list)
  (lambda (frame)
    (for-each
     (lambda (segment)
       (draw-line
        ((frame-coord-map frame)
         (start-segment segment))
        ((frame-coord-map frame)
         (end-segment segment))))
     segment-list)))
;線分は、単位正方形に対する座標を使って与えられます。
;リスト中のそれぞれの線分に対し、ペインタは線分の両端点を枠座標マップを使って変換し、変換した点の間に線を引きます。

;ペインタを手続きとして表現することは、図形言語の中に強力な抽象化の壁を作ります。
;さまざまなグラフィック機能に基づくいろいろな基本ペインタを作り、また組み合わせることができます。
;枠を引数として取り、その枠に合わせて何かを描くものであれば、どんな手続きでもペインタとして使うことができます。
